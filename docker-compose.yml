version: "3.8"
services:
  db:
    container_name: db
    image: postgres:15.1
    restart: always
    volumes:
      - app-db-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    container_name: backend
    build:
      context: .
    restart: always
    depends_on:
      - db
    volumes:
      - .:/api
    ports:
      - "8000:${BACKEND_PORT}"
    environment:
      ENV: development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.entryPoints=web"
      - "traefik.http.routers.backend.rule=Host(`backend.sudimir`) && PathPrefix(`/api`)"
    networks:
      - app-network

  # traefik:
  #   container_name: traefik
  #   image: traefik:v2.10
  #   restart: always
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #     - "./traefik.yaml:/etc/traefik/traefik.yaml"
  #   networks:
  #     - app-network

volumes:
  app-db-data:

networks:
  app-network: